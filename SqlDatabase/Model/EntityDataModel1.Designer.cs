//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Métadonnées de relation EDM

[assembly: EdmRelationshipAttribute("EntityDataModel", "GroupGroup", "Children", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SqlDatabase.Model.Group), "Parent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SqlDatabase.Model.Group))]
[assembly: EdmRelationshipAttribute("EntityDataModel", "UserGroup", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SqlDatabase.Model.User), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SqlDatabase.Model.Group))]
[assembly: EdmRelationshipAttribute("EntityDataModel", "CredentailUser", "Credentail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SqlDatabase.Model.Credentail), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SqlDatabase.Model.User))]
[assembly: EdmRelationshipAttribute("EntityDataModel", "CredentailGroup", "Credentail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SqlDatabase.Model.Credentail), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SqlDatabase.Model.Group))]
[assembly: EdmRelationshipAttribute("EntityDataModel", "UserArticle", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SqlDatabase.Model.User), "Articles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SqlDatabase.Model.Article))]
[assembly: EdmRelationshipAttribute("EntityDataModel", "ArticleTag", "Article", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SqlDatabase.Model.Article), "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SqlDatabase.Model.Tag))]
[assembly: EdmRelationshipAttribute("EntityDataModel", "CommentArticle", "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SqlDatabase.Model.Comment), "Article", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SqlDatabase.Model.Article))]
[assembly: EdmRelationshipAttribute("EntityDataModel", "UserComment", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SqlDatabase.Model.User), "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SqlDatabase.Model.Comment))]
[assembly: EdmRelationshipAttribute("EntityDataModel", "ReportUser", "Report", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SqlDatabase.Model.Report), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SqlDatabase.Model.User))]
[assembly: EdmRelationshipAttribute("EntityDataModel", "ReportArticle", "Report", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SqlDatabase.Model.Report), "Article", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SqlDatabase.Model.Article))]
[assembly: EdmRelationshipAttribute("EntityDataModel", "ReportComment", "Report", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SqlDatabase.Model.Report), "Comment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SqlDatabase.Model.Comment))]
[assembly: EdmRelationshipAttribute("EntityDataModel", "OptionTypeOption", "OptionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SqlDatabase.Model.OptionType), "Option", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SqlDatabase.Model.Option))]

#endregion

namespace SqlDatabase.Model
{
    #region Contextes
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    public partial class EntityDataModelContainer : ObjectContext
    {
        #region Constructeurs
    
        /// <summary>
        /// Initialise un nouvel objet EntityDataModelContainer à l'aide de la chaîne de connexion trouvée dans la section 'EntityDataModelContainer' du fichier de configuration d'application.
        /// </summary>
        public EntityDataModelContainer() : base("name=EntityDataModelContainer", "EntityDataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet EntityDataModelContainer.
        /// </summary>
        public EntityDataModelContainer(string connectionString) : base(connectionString, "EntityDataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisez un nouvel objet EntityDataModelContainer.
        /// </summary>
        public EntityDataModelContainer(EntityConnection connection) : base(connection, "EntityDataModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Méthodes partielles
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propriétés ObjectSet
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<Article> Articles
        {
            get
            {
                if ((_Articles == null))
                {
                    _Articles = base.CreateObjectSet<Article>("Articles");
                }
                return _Articles;
            }
        }
        private ObjectSet<Article> _Articles;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<Tag> Tags
        {
            get
            {
                if ((_Tags == null))
                {
                    _Tags = base.CreateObjectSet<Tag>("Tags");
                }
                return _Tags;
            }
        }
        private ObjectSet<Tag> _Tags;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<Comment> Comments
        {
            get
            {
                if ((_Comments == null))
                {
                    _Comments = base.CreateObjectSet<Comment>("Comments");
                }
                return _Comments;
            }
        }
        private ObjectSet<Comment> _Comments;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<Option> Options
        {
            get
            {
                if ((_Options == null))
                {
                    _Options = base.CreateObjectSet<Option>("Options");
                }
                return _Options;
            }
        }
        private ObjectSet<Option> _Options;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<Credentail> Credentails
        {
            get
            {
                if ((_Credentails == null))
                {
                    _Credentails = base.CreateObjectSet<Credentail>("Credentails");
                }
                return _Credentails;
            }
        }
        private ObjectSet<Credentail> _Credentails;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<Report> Reports
        {
            get
            {
                if ((_Reports == null))
                {
                    _Reports = base.CreateObjectSet<Report>("Reports");
                }
                return _Reports;
            }
        }
        private ObjectSet<Report> _Reports;
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        public ObjectSet<OptionType> OptionTypes
        {
            get
            {
                if ((_OptionTypes == null))
                {
                    _OptionTypes = base.CreateObjectSet<OptionType>("OptionTypes");
                }
                return _OptionTypes;
            }
        }
        private ObjectSet<OptionType> _OptionTypes;

        #endregion
        #region Méthodes AddTo
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Users. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Articles. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToArticles(Article article)
        {
            base.AddObject("Articles", article);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Tags. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToTags(Tag tag)
        {
            base.AddObject("Tags", tag);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Comments. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToComments(Comment comment)
        {
            base.AddObject("Comments", comment);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Options. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToOptions(Option option)
        {
            base.AddObject("Options", option);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Credentails. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToCredentails(Credentail credentail)
        {
            base.AddObject("Credentails", credentail);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Groups. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet Reports. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToReports(Report report)
        {
            base.AddObject("Reports", report);
        }
    
        /// <summary>
        /// Méthode déconseillée pour ajouter un nouvel objet à l'EntitySet OptionTypes. Utilisez la méthode .Add de la propriété ObjectSet&lt;T&gt; associée à la place.
        /// </summary>
        public void AddToOptionTypes(OptionType optionType)
        {
            base.AddObject("OptionTypes", optionType);
        }

        #endregion
    }
    

    #endregion
    
    #region Entités
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="Article")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Article : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Article.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="createdAt">Valeur initiale de la propriété CreatedAt.</param>
        /// <param name="title">Valeur initiale de la propriété Title.</param>
        /// <param name="content">Valeur initiale de la propriété Content.</param>
        /// <param name="slug">Valeur initiale de la propriété Slug.</param>
        public static Article CreateArticle(global::System.Int32 id, global::System.DateTime createdAt, global::System.String title, global::System.String content, global::System.String slug)
        {
            Article article = new Article();
            article.ID = id;
            article.CreatedAt = createdAt;
            article.Title = title;
            article.Content = content;
            article.Slug = slug;
            return article;
        }

        #endregion
        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                OnCreatedAtChanging(value);
                ReportPropertyChanging("CreatedAt");
                _CreatedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedAt");
                OnCreatedAtChanged();
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Published
        {
            get
            {
                return _Published;
            }
            set
            {
                OnPublishedChanging(value);
                ReportPropertyChanging("Published");
                _Published = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Published");
                OnPublishedChanged();
            }
        }
        private global::System.Boolean _Published = false;
        partial void OnPublishedChanging(global::System.Boolean value);
        partial void OnPublishedChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AllowComments
        {
            get
            {
                return _AllowComments;
            }
            set
            {
                OnAllowCommentsChanging(value);
                ReportPropertyChanging("AllowComments");
                _AllowComments = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllowComments");
                OnAllowCommentsChanged();
            }
        }
        private global::System.Boolean _AllowComments = true;
        partial void OnAllowCommentsChanging(global::System.Boolean value);
        partial void OnAllowCommentsChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Highlight
        {
            get
            {
                return _Highlight;
            }
            set
            {
                OnHighlightChanging(value);
                ReportPropertyChanging("Highlight");
                _Highlight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Highlight");
                OnHighlightChanged();
            }
        }
        private global::System.Boolean _Highlight = false;
        partial void OnHighlightChanging(global::System.Boolean value);
        partial void OnHighlightChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommentsCount
        {
            get
            {
                return _CommentsCount;
            }
            set
            {
                OnCommentsCountChanging(value);
                ReportPropertyChanging("CommentsCount");
                _CommentsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommentsCount");
                OnCommentsCountChanged();
            }
        }
        private global::System.Int32 _CommentsCount = 0;
        partial void OnCommentsCountChanging(global::System.Int32 value);
        partial void OnCommentsCountChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Slug
        {
            get
            {
                return _Slug;
            }
            set
            {
                OnSlugChanging(value);
                ReportPropertyChanging("Slug");
                _Slug = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Slug");
                OnSlugChanged();
            }
        }
        private global::System.String _Slug;
        partial void OnSlugChanging(global::System.String value);
        partial void OnSlugChanged();

        #endregion
    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "UserArticle", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EntityDataModel.UserArticle", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EntityDataModel.UserArticle", "User").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EntityDataModel.UserArticle", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EntityDataModel.UserArticle", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "ArticleTag", "Tag")]
        public EntityCollection<Tag> Tags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("EntityDataModel.ArticleTag", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("EntityDataModel.ArticleTag", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "CommentArticle", "Comment")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("EntityDataModel.CommentArticle", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("EntityDataModel.CommentArticle", "Comment", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "ReportArticle", "Report")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("EntityDataModel.ReportArticle", "Report").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("EntityDataModel.ReportArticle", "Report").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("EntityDataModel.ReportArticle", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("EntityDataModel.ReportArticle", "Report", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="Comment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Comment : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Comment.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="createdAt">Valeur initiale de la propriété CreatedAt.</param>
        /// <param name="content">Valeur initiale de la propriété Content.</param>
        public static Comment CreateComment(global::System.Int32 id, global::System.DateTime createdAt, global::System.String content)
        {
            Comment comment = new Comment();
            comment.ID = id;
            comment.CreatedAt = createdAt;
            comment.Content = content;
            return comment;
        }

        #endregion
        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                OnCreatedAtChanging(value);
                ReportPropertyChanging("CreatedAt");
                _CreatedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedAt");
                OnCreatedAtChanged();
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Published
        {
            get
            {
                return _Published;
            }
            set
            {
                OnPublishedChanging(value);
                ReportPropertyChanging("Published");
                _Published = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Published");
                OnPublishedChanged();
            }
        }
        private global::System.Boolean _Published = true;
        partial void OnPublishedChanging(global::System.Boolean value);
        partial void OnPublishedChanged();

        #endregion
    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "CommentArticle", "Article")]
        public Article Article
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Article>("EntityDataModel.CommentArticle", "Article").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Article>("EntityDataModel.CommentArticle", "Article").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Article> ArticleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Article>("EntityDataModel.CommentArticle", "Article");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Article>("EntityDataModel.CommentArticle", "Article", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "UserComment", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EntityDataModel.UserComment", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EntityDataModel.UserComment", "User").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EntityDataModel.UserComment", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EntityDataModel.UserComment", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "ReportComment", "Report")]
        public Report Report
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("EntityDataModel.ReportComment", "Report").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("EntityDataModel.ReportComment", "Report").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Report> ReportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Report>("EntityDataModel.ReportComment", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Report>("EntityDataModel.ReportComment", "Report", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="Credentail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Credentail : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Credentail.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="description">Valeur initiale de la propriété Description.</param>
        public static Credentail CreateCredentail(global::System.Int32 id, global::System.String description)
        {
            Credentail credentail = new Credentail();
            credentail.ID = id;
            credentail.Description = description;
            return credentail;
        }

        #endregion
        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "CredentailUser", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("EntityDataModel.CredentailUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("EntityDataModel.CredentailUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "CredentailGroup", "Group")]
        public EntityCollection<Group> Groups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("EntityDataModel.CredentailGroup", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("EntityDataModel.CredentailGroup", "Group", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Group.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="name">Valeur initiale de la propriété Name.</param>
        public static Group CreateGroup(global::System.Int32 id, global::System.String name)
        {
            Group group = new Group();
            group.ID = id;
            group.Name = name;
            return group;
        }

        #endregion
        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "GroupGroup", "Parent")]
        public EntityCollection<Group> Children
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("EntityDataModel.GroupGroup", "Parent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("EntityDataModel.GroupGroup", "Parent", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "GroupGroup", "Children")]
        public Group Parent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("EntityDataModel.GroupGroup", "Children").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("EntityDataModel.GroupGroup", "Children").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> ParentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("EntityDataModel.GroupGroup", "Children");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("EntityDataModel.GroupGroup", "Children", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "UserGroup", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("EntityDataModel.UserGroup", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("EntityDataModel.UserGroup", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "CredentailGroup", "Credentail")]
        public EntityCollection<Credentail> Credentails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Credentail>("EntityDataModel.CredentailGroup", "Credentail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Credentail>("EntityDataModel.CredentailGroup", "Credentail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="Option")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Option : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Option.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="name">Valeur initiale de la propriété Name.</param>
        /// <param name="fullname">Valeur initiale de la propriété Fullname.</param>
        /// <param name="description">Valeur initiale de la propriété Description.</param>
        /// <param name="integer">Valeur initiale de la propriété Integer.</param>
        /// <param name="dateTime">Valeur initiale de la propriété DateTime.</param>
        /// <param name="boolean">Valeur initiale de la propriété Boolean.</param>
        /// <param name="decimal">Valeur initiale de la propriété Decimal.</param>
        public static Option CreateOption(global::System.Int32 id, global::System.String name, global::System.String fullname, global::System.String description, global::System.Int32 integer, global::System.DateTime dateTime, global::System.Boolean boolean, global::System.Decimal @decimal)
        {
            Option option = new Option();
            option.ID = id;
            option.Name = name;
            option.Fullname = fullname;
            option.Description = description;
            option.Integer = integer;
            option.DateTime = dateTime;
            option.Boolean = boolean;
            option.Decimal = @decimal;
            return option;
        }

        #endregion
        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fullname
        {
            get
            {
                return _Fullname;
            }
            set
            {
                OnFullnameChanging(value);
                ReportPropertyChanging("Fullname");
                _Fullname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Fullname");
                OnFullnameChanged();
            }
        }
        private global::System.String _Fullname;
        partial void OnFullnameChanging(global::System.String value);
        partial void OnFullnameChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String String
        {
            get
            {
                return _String;
            }
            set
            {
                OnStringChanging(value);
                ReportPropertyChanging("String");
                _String = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("String");
                OnStringChanged();
            }
        }
        private global::System.String _String = "";
        partial void OnStringChanging(global::System.String value);
        partial void OnStringChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Integer
        {
            get
            {
                return _Integer;
            }
            set
            {
                OnIntegerChanging(value);
                ReportPropertyChanging("Integer");
                _Integer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Integer");
                OnIntegerChanged();
            }
        }
        private global::System.Int32 _Integer;
        partial void OnIntegerChanging(global::System.Int32 value);
        partial void OnIntegerChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private global::System.DateTime _DateTime;
        partial void OnDateTimeChanging(global::System.DateTime value);
        partial void OnDateTimeChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Boolean
        {
            get
            {
                return _Boolean;
            }
            set
            {
                OnBooleanChanging(value);
                ReportPropertyChanging("Boolean");
                _Boolean = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Boolean");
                OnBooleanChanged();
            }
        }
        private global::System.Boolean _Boolean;
        partial void OnBooleanChanging(global::System.Boolean value);
        partial void OnBooleanChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Decimal
        {
            get
            {
                return _Decimal;
            }
            set
            {
                OnDecimalChanging(value);
                ReportPropertyChanging("Decimal");
                _Decimal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Decimal");
                OnDecimalChanged();
            }
        }
        private global::System.Decimal _Decimal;
        partial void OnDecimalChanging(global::System.Decimal value);
        partial void OnDecimalChanged();

        #endregion
    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "OptionTypeOption", "OptionType")]
        public OptionType OptionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionType>("EntityDataModel.OptionTypeOption", "OptionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionType>("EntityDataModel.OptionTypeOption", "OptionType").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OptionType> OptionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionType>("EntityDataModel.OptionTypeOption", "OptionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OptionType>("EntityDataModel.OptionTypeOption", "OptionType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="OptionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OptionType : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet OptionType.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="name">Valeur initiale de la propriété Name.</param>
        public static OptionType CreateOptionType(global::System.Int32 id, global::System.String name)
        {
            OptionType optionType = new OptionType();
            optionType.ID = id;
            optionType.Name = name;
            return optionType;
        }

        #endregion
        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "OptionTypeOption", "Option")]
        public EntityCollection<Option> Options
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Option>("EntityDataModel.OptionTypeOption", "Option");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Option>("EntityDataModel.OptionTypeOption", "Option", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="Report")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Report : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Report.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="createdAt">Valeur initiale de la propriété CreatedAt.</param>
        public static Report CreateReport(global::System.Int32 id, global::System.DateTime createdAt)
        {
            Report report = new Report();
            report.ID = id;
            report.CreatedAt = createdAt;
            return report;
        }

        #endregion
        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                OnCreatedAtChanging(value);
                ReportPropertyChanging("CreatedAt");
                _CreatedAt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedAt");
                OnCreatedAtChanged();
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Solved
        {
            get
            {
                return _Solved;
            }
            set
            {
                OnSolvedChanging(value);
                ReportPropertyChanging("Solved");
                _Solved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Solved");
                OnSolvedChanged();
            }
        }
        private global::System.Boolean _Solved = false;
        partial void OnSolvedChanging(global::System.Boolean value);
        partial void OnSolvedChanged();

        #endregion
    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "ReportUser", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EntityDataModel.ReportUser", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EntityDataModel.ReportUser", "User").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("EntityDataModel.ReportUser", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("EntityDataModel.ReportUser", "User", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "ReportArticle", "Article")]
        public Article Article
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Article>("EntityDataModel.ReportArticle", "Article").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Article>("EntityDataModel.ReportArticle", "Article").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Article> ArticleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Article>("EntityDataModel.ReportArticle", "Article");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Article>("EntityDataModel.ReportArticle", "Article", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "ReportComment", "Comment")]
        public Comment Comment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Comment>("EntityDataModel.ReportComment", "Comment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Comment>("EntityDataModel.ReportComment", "Comment").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Comment> CommentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Comment>("EntityDataModel.ReportComment", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Comment>("EntityDataModel.ReportComment", "Comment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet Tag.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="name">Valeur initiale de la propriété Name.</param>
        /// <param name="slug">Valeur initiale de la propriété Slug.</param>
        public static Tag CreateTag(global::System.Int32 id, global::System.String name, global::System.String slug)
        {
            Tag tag = new Tag();
            tag.ID = id;
            tag.Name = name;
            tag.Slug = slug;
            return tag;
        }

        #endregion
        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Slug
        {
            get
            {
                return _Slug;
            }
            set
            {
                OnSlugChanging(value);
                ReportPropertyChanging("Slug");
                _Slug = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Slug");
                OnSlugChanged();
            }
        }
        private global::System.String _Slug;
        partial void OnSlugChanging(global::System.String value);
        partial void OnSlugChanged();

        #endregion
    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "ArticleTag", "Article")]
        public EntityCollection<Article> Articles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Article>("EntityDataModel.ArticleTag", "Article");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Article>("EntityDataModel.ArticleTag", "Article", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Aucune documentation sur les métadonnées n'est disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="EntityDataModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Méthode de fabrique
    
        /// <summary>
        /// Créez un nouvel objet User.
        /// </summary>
        /// <param name="id">Valeur initiale de la propriété ID.</param>
        /// <param name="mail">Valeur initiale de la propriété Mail.</param>
        /// <param name="password">Valeur initiale de la propriété Password.</param>
        /// <param name="username">Valeur initiale de la propriété Username.</param>
        /// <param name="slug">Valeur initiale de la propriété Slug.</param>
        /// <param name="activationKey">Valeur initiale de la propriété ActivationKey.</param>
        /// <param name="createdAt">Valeur initiale de la propriété CreatedAt.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String mail, global::System.String password, global::System.String username, global::System.String slug, global::System.String activationKey, global::System.String createdAt)
        {
            User user = new User();
            user.ID = id;
            user.Mail = mail;
            user.Password = password;
            user.Username = username;
            user.Slug = slug;
            user.ActivationKey = activationKey;
            user.CreatedAt = createdAt;
            return user;
        }

        #endregion
        #region Propriétés primitives
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mail
        {
            get
            {
                return _Mail;
            }
            set
            {
                OnMailChanging(value);
                ReportPropertyChanging("Mail");
                _Mail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mail");
                OnMailChanged();
            }
        }
        private global::System.String _Mail;
        partial void OnMailChanging(global::System.String value);
        partial void OnMailChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Slug
        {
            get
            {
                return _Slug;
            }
            set
            {
                OnSlugChanging(value);
                ReportPropertyChanging("Slug");
                _Slug = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Slug");
                OnSlugChanged();
            }
        }
        private global::System.String _Slug;
        partial void OnSlugChanging(global::System.String value);
        partial void OnSlugChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActivationKey
        {
            get
            {
                return _ActivationKey;
            }
            set
            {
                OnActivationKeyChanging(value);
                ReportPropertyChanging("ActivationKey");
                _ActivationKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActivationKey");
                OnActivationKeyChanged();
            }
        }
        private global::System.String _ActivationKey;
        partial void OnActivationKeyChanging(global::System.String value);
        partial void OnActivationKeyChanged();
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                OnCreatedAtChanging(value);
                ReportPropertyChanging("CreatedAt");
                _CreatedAt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CreatedAt");
                OnCreatedAtChanged();
            }
        }
        private global::System.String _CreatedAt;
        partial void OnCreatedAtChanging(global::System.String value);
        partial void OnCreatedAtChanged();

        #endregion
    
        #region Propriétés de navigation
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "UserGroup", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("EntityDataModel.UserGroup", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("EntityDataModel.UserGroup", "Group").Value = value;
            }
        }
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("EntityDataModel.UserGroup", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("EntityDataModel.UserGroup", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "CredentailUser", "Credentail")]
        public EntityCollection<Credentail> Credentails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Credentail>("EntityDataModel.CredentailUser", "Credentail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Credentail>("EntityDataModel.CredentailUser", "Credentail", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "UserArticle", "Articles")]
        public EntityCollection<Article> Articles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Article>("EntityDataModel.UserArticle", "Articles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Article>("EntityDataModel.UserArticle", "Articles", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "UserComment", "Comment")]
        public EntityCollection<Comment> Comments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Comment>("EntityDataModel.UserComment", "Comment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Comment>("EntityDataModel.UserComment", "Comment", value);
                }
            }
        }
    
        /// <summary>
        /// Aucune documentation sur les métadonnées n'est disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("EntityDataModel", "ReportUser", "Report")]
        public EntityCollection<Report> Reports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Report>("EntityDataModel.ReportUser", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Report>("EntityDataModel.ReportUser", "Report", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
